# -*- coding: utf-8 -*-
"""churn_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EhG_A5wTXi-Xcsz6uQJ2CfKfNNwqZrxe
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

df = pd.read_csv("/content/Telco Cleaned View.csv")

print(df.head())
print(df.info())
print(df['Churn'].value_counts())

sns.countplot(data=df, x='Churn')
plt.title("Customer Churn Distribution")
plt.show()

sns.countplot(data=df, x='Contract', hue='Churn')
plt.title("Churn by Contract Type")
plt.show()

sns.boxplot(data=df, x='Churn', y='MonthlyCharges')
plt.title("Monthly Charges by Churn Status")
plt.show()

sns.boxplot(data=df, x='Churn', y='tenure')
plt.title("Tenure by Churn Status")
plt.show()

numeric_features = ['tenure','MonthlyCharges','TotalCharges']
corr = df[numeric_features].corr()
sns.heatmap(corr, annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap")
plt.show()

df['TenureBucket'] = pd.cut(
    df['tenure'],
    bins=[0, 12, 24, 48, 72],
    labels=['0-12', '13-24', '25-48', '49+']
)

df['HighRisk'] = ((df['Contract']=='Month-to-month') & (df['Churn']=='Yes')).astype(int)

sns.boxplot(data=df, x='Churn', y='TenureBucket')
plt.title("Tenure Bracket by Churn Status")
plt.show()

contract_summary = df.groupby('Contract')['Churn'].value_counts(normalize=True).unstack().fillna(0)
contract_summary['ChurnRate'] = contract_summary['Yes']

from google.colab import files

contract_summary.to_csv("contract_churn_summary.csv", index=True)
files.download("contract_churn_summary.csv")

payment_summary = df.groupby('PaymentMethod')['Churn'].value_counts(normalize=True).unstack().fillna(0)
payment_summary['ChurnRate'] = payment_summary['Yes']
payment_summary.to_csv("payment_churn_summary.csv", index=True)
files.download("payment_churn_summary.csv")

tenure_summary = df.groupby('TenureBucket')['Churn'].value_counts(normalize=True).unstack().fillna(0)
tenure_summary['ChurnRate'] = tenure_summary['Yes']
tenure_summary.to_csv("tenure_churn_summary.csv", index=True)
files.download("tenure_churn_summary.csv")

df[['tenure', 'TenureBucket', 'Contract', 'Churn', 'HighRisk']].head(10)

df.to_csv("telco_cleaned_updated.csv", index=False)
files.download("telco_cleaned_updated.csv")

